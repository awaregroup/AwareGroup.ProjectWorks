{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "ProjectWorks Business API v1.0"
  },
  "host": "projectworks-awaregroup-sandbox-api.azurewebsites.net",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/v{version}/Clients/Types": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Get Client Types",
        "operationId": "Clients_GetClientTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Client Types found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClientType"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Clients/{clientID}": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Get Client",
        "operationId": "Clients_GetClient",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "clientID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Client found",
            "schema": {
              "$ref": "#/definitions/ClientResponse"
            }
          },
          "404": {
            "description": "Client not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Update Client",
        "description": "Returns the Client",
        "operationId": "Clients_Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "clientID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientRequest"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Client updated",
            "schema": {
              "$ref": "#/definitions/ClientResponse"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Clients"
        ],
        "summary": "Delete Client",
        "operationId": "Clients_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "clientID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "204": {
            "description": "Client deleted",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Client not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Clients/{clientID}/RateCards": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Get Client RateCards",
        "operationId": "Clients_GetClientRateCards",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "clientID",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Client RateCards found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClientRateCard"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Clients/FinancePaymentTermTypes": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Get Client FinancePaymentTermTypes",
        "operationId": "Clients_GetClientFinancePaymentTermType",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Client FinancePaymentTermTypes found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClientFinancePaymentTermType"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Clients": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Get Clients",
        "description": "Page size = 100.",
        "operationId": "Clients_GetClients",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "query.officeID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query.clientID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.externalReference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.modifiedSinceDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Clients found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClientResponse"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Create Client",
        "description": "Returns the new Client and a response header with the location of the new Client.\r\n\r\nThe finance information is not required, however you will not be able to generate invoices from this Client without it.",
        "operationId": "Clients_CreateClient",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientRequest"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "201": {
            "description": "Client created",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Clients/{clientID}/BillingContacts": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Get Client Billing Contacts",
        "operationId": "Clients_GetBillingContacts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "clientID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "query.billingContactID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query.clientID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.externalReference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.modifiedSinceDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Billing Contacts found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BillingContactRequest"
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Client not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Create/Update Billing Contact",
        "description": "Returns the created/updated Billing Contact, and if created a response header with the location of the new Contact.",
        "operationId": "Clients_CreateOrUpdateBillingContact",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "clientID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BillingContactRequest"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Billing Contact updated",
            "schema": {
              "$ref": "#/definitions/BillingContactResponse"
            }
          },
          "201": {
            "description": "Billing Contact created",
            "schema": {
              "$ref": "#/definitions/BillingContactResponse"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Client not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Clients/BillingContacts/{billingContactID}": {
      "delete": {
        "tags": [
          "Clients"
        ],
        "summary": "Delete Billing Contact",
        "operationId": "Clients_DeleteBillingContact",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "billingContactID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "204": {
            "description": "Billing Contact deleted",
            "schema": {
              "type": "object"
            }
          },
          "404": {
            "description": "Billing Contact not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Common/GLCodes": {
      "get": {
        "tags": [
          "Common"
        ],
        "summary": "Get GLCodes",
        "operationId": "Common_GetGLCodes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "GLCodes found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GLCode"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Common/Countries": {
      "get": {
        "tags": [
          "Common"
        ],
        "summary": "Get Countries",
        "operationId": "Common_GetCountries",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Countries found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Country"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Common/RateCards": {
      "get": {
        "tags": [
          "Common"
        ],
        "summary": "Get RateCards",
        "operationId": "Common_GetRateCards",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "RateCards found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RateCard"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Common/WorkWeeks": {
      "get": {
        "tags": [
          "Common"
        ],
        "summary": "Get WorkWeeks",
        "operationId": "Common_GetWorkWeeks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "WorkWeeks found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkWeek"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Common/Agreements": {
      "get": {
        "tags": [
          "Common"
        ],
        "summary": "Get Agreements",
        "operationId": "Common_GetAgreements",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Agreements found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Agreement"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Common/Currencies": {
      "get": {
        "tags": [
          "Common"
        ],
        "summary": "Get Currencies",
        "operationId": "Common_GetCurrencies",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Currencies found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Currency"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Common/HolidayCalendars": {
      "get": {
        "tags": [
          "Common"
        ],
        "summary": "Get HolidayCalendars",
        "operationId": "Common_GetHolidayCalendars",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "HolidayCalendars found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HolidayCalendar"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Modules/{moduleID}": {
      "get": {
        "tags": [
          "Modules"
        ],
        "summary": "Get Module",
        "operationId": "Modules_GetModule",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "moduleID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Module found",
            "schema": {
              "$ref": "#/definitions/ModuleResponse"
            }
          },
          "404": {
            "description": "Module not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Modules"
        ],
        "summary": "Update Module",
        "description": "Returns the Module",
        "operationId": "Modules_Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "moduleID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModuleRequest"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Module updated",
            "schema": {
              "$ref": "#/definitions/ModuleResponse"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Modules"
        ],
        "summary": "Delete Module",
        "operationId": "Modules_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "moduleID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "204": {
            "description": "Module deleted",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Module not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Modules/BudgetTypes": {
      "get": {
        "tags": [
          "Modules"
        ],
        "summary": "Get Module BudgetTypes",
        "operationId": "Modules_GetBudgetTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Module BudgetTypes found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ModuleBudgetType"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Modules/BudgetFrequencies": {
      "get": {
        "tags": [
          "Modules"
        ],
        "summary": "Get Module BudgetFrequencies",
        "operationId": "Modules_GetBudgetFrequencies",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Module BudgetFrequencies found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ModuleBudgetFrequency"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Modules": {
      "get": {
        "tags": [
          "Modules"
        ],
        "summary": "Get Modules",
        "description": "Page size = 100.",
        "operationId": "Modules_GetModules",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "query.projectID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query.moduleID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.externalReference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.modifiedSinceDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Modules found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ModuleResponse"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Modules"
        ],
        "summary": "Create Module",
        "description": "Returns the new Module and a response header with the location of the new Module.",
        "operationId": "Modules_Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModuleRequest"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "201": {
            "description": "Module created",
            "schema": {
              "$ref": "#/definitions/ModuleResponse"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Offices/{officeID}": {
      "get": {
        "tags": [
          "Offices"
        ],
        "summary": "Get Office",
        "operationId": "Offices_GetOffice",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "officeID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Office found",
            "schema": {
              "$ref": "#/definitions/OfficeResponse"
            }
          },
          "404": {
            "description": "Office not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Offices": {
      "get": {
        "tags": [
          "Offices"
        ],
        "summary": "Get Offices",
        "operationId": "Offices_GetOffices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "query.officeID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.externalReference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.modifiedSinceDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Offices found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OfficeResponse"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Positions": {
      "get": {
        "tags": [
          "Positions"
        ],
        "summary": "Get Positions",
        "operationId": "Positions_GetPositions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Positions found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Position"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Projects/Types": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get Project Types",
        "operationId": "Projects_GetProjectTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Project Types found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectType"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Projects/Statuses": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get Project Statuses",
        "operationId": "Projects_GetProjectStatuses",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Project Statuses found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectStatus"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Projects/{projectID}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get Project",
        "description": "Get the Project",
        "operationId": "Projects_GetProject",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "projectID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Project found",
            "schema": {
              "$ref": "#/definitions/ProjectResponse"
            }
          },
          "404": {
            "description": "Project not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Update Project",
        "description": "Returns the Project",
        "operationId": "Projects_Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "projectID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectRequest"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Project updated",
            "schema": {
              "$ref": "#/definitions/ProjectResponse"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Delete Project",
        "operationId": "Projects_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "projectID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "204": {
            "description": "Project deleted",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Project not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Projects/TaskSelfServiceModes": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get Project TaskSelfServiceModes",
        "operationId": "Projects_GetTaskSelfServiceModes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Project TaskSelfServiceModes found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectTaskSelfServiceMode"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get Projects",
        "description": "Page size = 100.",
        "operationId": "Projects_GetProjects",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "query.clientID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query.projectID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.externalReference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.modifiedSinceDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Projects found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectResponse"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Create Project",
        "description": "Returns the new Project and a response header with the location of the new Project.",
        "operationId": "Projects_Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectRequest"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "201": {
            "description": "Project created",
            "schema": {
              "$ref": "#/definitions/ProjectResponse"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Ranks": {
      "get": {
        "tags": [
          "Ranks"
        ],
        "summary": "Get Ranks",
        "operationId": "Ranks_GetRanks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Ranks found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Rank"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/ServiceDesk/GetUser": {
      "get": {
        "tags": [
          "ServiceDesk"
        ],
        "summary": "Get User",
        "description": "Get a User by the given Custom Field name/value pair",
        "operationId": "ServiceDesk_GetUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customFieldName",
            "in": "query",
            "description": "Custom Field name",
            "required": true,
            "type": "string"
          },
          {
            "name": "customFieldValue",
            "in": "query",
            "description": "Custom Field value",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "$ref": "#/definitions/ServiceDeskUserResponse"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/ServiceDesk/CreateOrUpdateTask": {
      "post": {
        "tags": [
          "ServiceDesk"
        ],
        "summary": "Create or update a Task",
        "description": "Create or update a ProjectWorks Task to that maps to a Service Desk Incident.\r\n\r\nMandatory 'IsKey' Custom Fields:\r\nA Module Custom Field that identifies the Module to update (maps to the Service Desk Service Name).\r\nA Task Custom Field that identifies the Task to update (maps to the Service Desk Incident ID).\r\nA User Custom Field that identifies the User to update (maps to the Service Desk User ID).\r\n\r\nOptional Custom Fields:\r\nAny number of other Module, Task or User Custom Fields can be added to the Fields list.",
        "operationId": "ServiceDesk_CreateOrUpdateTask",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "ServiceDeskTaskRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceDeskTaskRequest"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Task updated",
            "schema": {
              "$ref": "#/definitions/ServiceDeskTaskResponse"
            }
          },
          "201": {
            "description": "Task created",
            "schema": {
              "$ref": "#/definitions/ServiceDeskTaskResponse"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Module not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Tasks/Types": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get Task Types",
        "operationId": "Tasks_GetTaskTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Task Types found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskType"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Tasks/Statuses": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get Task Statuses",
        "operationId": "Tasks_GetTaskStatuses",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Task Statuses found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskStatus"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Tasks/{taskID}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get Task",
        "description": "Get the Task",
        "operationId": "Tasks_GetTask",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Task found",
            "schema": {
              "$ref": "#/definitions/TaskResponse"
            }
          },
          "404": {
            "description": "Task not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Tasks"
        ],
        "summary": "Update Task",
        "description": "Returns the Task",
        "operationId": "Tasks_Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskRequest"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Task updated",
            "schema": {
              "$ref": "#/definitions/TaskResponse"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Delete Task",
        "operationId": "Tasks_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "204": {
            "description": "Task deleted",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Task not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get Tasks",
        "description": "Page size = 100.",
        "operationId": "Tasks_GetTasks",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "query.moduleID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query.taskID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.externalReference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.modifiedSinceDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Tasks found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskResponse"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create Task",
        "description": "Returns the new Task and a response header with the location of the new Task",
        "operationId": "Tasks_Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskRequest"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "201": {
            "description": "Task created",
            "schema": {
              "$ref": "#/definitions/TaskResponse"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Teams": {
      "get": {
        "tags": [
          "Teams"
        ],
        "summary": "Get Teams",
        "operationId": "Teams_GetTeams",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Teams found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Team"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Timesheets": {
      "get": {
        "tags": [
          "Timesheets"
        ],
        "summary": "Get Timesheet Entries",
        "description": "Page size = 100.",
        "operationId": "Timesheets_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "userID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "taskID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "comment",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userExternalReference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "taskExternalReference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "modifiedSinceDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Timesheet entries found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TimeEntryResponse"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Timesheets"
        ],
        "summary": "Create/Update Timesheet Entry",
        "description": "Returns the Timesheet entry, when creating also returns a response header with the location of the new entry.",
        "operationId": "Timesheets_CreateOrUpdate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TimeEntryRequest"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Timesheet entry updated",
            "schema": {
              "$ref": "#/definitions/TimeEntryResponse"
            }
          },
          "201": {
            "description": "Timesheet entry created",
            "schema": {
              "$ref": "#/definitions/TimeEntryResponse"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Timesheets"
        ],
        "summary": "Delete Timesheet Entry",
        "operationId": "Timesheets_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "query",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "taskID",
            "in": "query",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "date",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "204": {
            "description": "Timesheet entry deleted",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "Timesheet entry not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Users/Roles": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User Roles",
        "operationId": "Users_GetUserRoles",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "User Roles found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserRoleResponse"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Users/{userID}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User",
        "description": "Get the User",
        "operationId": "Users_GetUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update User",
        "description": "Returns the User",
        "operationId": "Users_Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRequest"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete User",
        "operationId": "Users_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Users/{userID}/Roles": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User's UserRoles",
        "operationId": "Users_GetUserRoles",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "UserRoles found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserRoleResponse"
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update User's UserRoles",
        "operationId": "Users_UpdateUserRoles",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRoleRequest"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "201": {
            "description": "UserRoles updated",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete User's UserRoles",
        "operationId": "Users_DeleteUserRoles",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRoleRequest"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "204": {
            "description": "UserRoles deleted",
            "schema": {
              "type": "object"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Users/{userID}/Postings": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Postings",
        "operationId": "Users_GetUserPostings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "200": {
            "description": "Postings found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserPostingResponse"
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Create Posting",
        "description": "Returns the new Posting.",
        "operationId": "Users_CreatePosting",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserPostingRequest"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "201": {
            "description": "Posting created",
            "schema": {
              "$ref": "#/definitions/UserPostingResponse"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete User Posting",
        "operationId": "Users_DeleteUserPosting",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "204": {
            "description": "Posting deleted",
            "schema": {
              "type": "object"
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v{version}/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Users",
        "description": "Page size = 100.",
        "operationId": "Users_GetUsers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          },
          {
            "name": "query.userID",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "query.email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.externalReference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.modifiedSinceDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Users found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserResponse"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create User",
        "description": "Returns the new User and a response header with the location of the new User",
        "operationId": "Users_Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRequest"
            }
          },
          {
            "name": "version",
            "in": "path",
            "description": "The requested API version",
            "required": true,
            "type": "string",
            "default": "1.0"
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "400": {
            "description": "Validation error"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "ClientType": {
      "type": "object",
      "properties": {
        "ClientTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "ClientResponse": {
      "type": "object",
      "properties": {
        "ClientID": {
          "format": "int32",
          "type": "integer"
        },
        "ClientName": {
          "type": "string"
        },
        "OfficeID": {
          "format": "int32",
          "type": "integer"
        },
        "OfficeName": {
          "type": "string"
        },
        "AccountManagerID": {
          "format": "int32",
          "type": "integer"
        },
        "AccountManagerName": {
          "type": "string"
        },
        "ClientTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "ClientTypeName": {
          "type": "string"
        },
        "DefaultRateCardID": {
          "format": "int32",
          "type": "integer"
        },
        "FinanceEmail": {
          "type": "string"
        },
        "FinancePhone": {
          "type": "string"
        },
        "FinanceNotes": {
          "type": "string"
        },
        "FinancePaymentTermTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "FinancePaymentTermTypeName": {
          "type": "string"
        },
        "FinancePaymentTermDays": {
          "format": "int32",
          "type": "integer"
        },
        "Projects": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "BillingContacts": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "ExternalReference": {
          "type": "string"
        },
        "ModifiedDateUTC": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ClientRequest": {
      "required": [
        "ClientName",
        "AccountManagerID",
        "OfficeID"
      ],
      "type": "object",
      "properties": {
        "ClientName": {
          "type": "string"
        },
        "AccountManagerID": {
          "format": "int32",
          "type": "integer"
        },
        "OfficeID": {
          "format": "int32",
          "type": "integer"
        },
        "ClientTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "DefaultRateCardID": {
          "format": "int32",
          "type": "integer"
        },
        "FinanceEmail": {
          "type": "string"
        },
        "FinancePhone": {
          "type": "string"
        },
        "FinanceNotes": {
          "type": "string"
        },
        "IsInvoiceReferenceRequired": {
          "type": "boolean"
        },
        "SendBillingContactEmail": {
          "type": "boolean"
        },
        "SendClientFinanceEmail": {
          "type": "boolean"
        },
        "FinancePaymentTermTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "FinancePaymentTermDays": {
          "format": "int32",
          "type": "integer"
        },
        "ExternalReference": {
          "type": "string"
        }
      }
    },
    "ClientRateCard": {
      "type": "object",
      "properties": {
        "RateCardID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "CurrencyID": {
          "format": "int32",
          "type": "integer"
        },
        "CurrencyCode": {
          "type": "string"
        }
      }
    },
    "ClientFinancePaymentTermType": {
      "type": "object",
      "properties": {
        "TermTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "ClientQuery": {
      "type": "object",
      "properties": {
        "OfficeID": {
          "format": "int32",
          "type": "integer"
        },
        "ClientID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "ExternalReference": {
          "type": "string"
        },
        "ModifiedSinceDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "BillingContactQuery": {
      "type": "object",
      "properties": {
        "BillingContactID": {
          "format": "int32",
          "type": "integer"
        },
        "ClientID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "ExternalReference": {
          "type": "string"
        },
        "ModifiedSinceDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "BillingContactRequest": {
      "required": [
        "ClientID",
        "ContactName",
        "ContactEmail",
        "PostalAddress1",
        "CityOrState",
        "Postcode",
        "CountryCode"
      ],
      "type": "object",
      "properties": {
        "BillingContactID": {
          "format": "int32",
          "type": "integer"
        },
        "ClientID": {
          "format": "int32",
          "type": "integer"
        },
        "ContactName": {
          "type": "string"
        },
        "ContactEmail": {
          "type": "string"
        },
        "ContactEmailCc": {
          "type": "string"
        },
        "PostalAddress1": {
          "type": "string"
        },
        "PostalAddress2": {
          "type": "string"
        },
        "PostalAddress3": {
          "type": "string"
        },
        "CityOrState": {
          "type": "string"
        },
        "Postcode": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "ExternalReference": {
          "type": "string"
        }
      }
    },
    "BillingContactResponse": {
      "type": "object",
      "properties": {
        "BillingContactID": {
          "format": "int32",
          "type": "integer"
        },
        "ClientID": {
          "format": "int32",
          "type": "integer"
        },
        "ContactName": {
          "type": "string"
        },
        "ContactEmail": {
          "type": "string"
        },
        "ContactEmailCc": {
          "type": "string"
        },
        "PostalAddress1": {
          "type": "string"
        },
        "PostalAddress2": {
          "type": "string"
        },
        "PostalAddress3": {
          "type": "string"
        },
        "CityOrState": {
          "type": "string"
        },
        "Postcode": {
          "type": "string"
        },
        "CountryName": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "ExternalReference": {
          "type": "string"
        },
        "ModifiedDateUTC": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "GLCode": {
      "type": "object",
      "properties": {
        "GLCodeID": {
          "format": "int32",
          "type": "integer"
        },
        "Code": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "IsInterco": {
          "type": "boolean"
        },
        "IsDiscount": {
          "type": "boolean"
        },
        "GLCodeTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "GLCodeTypeName": {
          "type": "string"
        },
        "ExternalReference": {
          "type": "string"
        },
        "ModifiedDateUTC": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Country": {
      "type": "object",
      "properties": {
        "CountryID": {
          "format": "int32",
          "type": "integer"
        },
        "Code": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "RateCard": {
      "type": "object",
      "properties": {
        "RateCardID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "IsDefault": {
          "type": "boolean"
        },
        "IsActive": {
          "type": "boolean"
        },
        "CurrencyID": {
          "format": "int32",
          "type": "integer"
        },
        "CurrencyCode": {
          "type": "string"
        },
        "ExternalReference": {
          "type": "string"
        },
        "ModifiedDateUTC": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "WorkWeek": {
      "type": "object",
      "properties": {
        "WorkWeekID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "Agreement": {
      "type": "object",
      "properties": {
        "AgreementID": {
          "format": "int32",
          "type": "integer"
        },
        "Code": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "IsContractor": {
          "type": "boolean"
        },
        "AgreementTypeID": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Currency": {
      "type": "object",
      "properties": {
        "CurrencyID": {
          "format": "int32",
          "type": "integer"
        },
        "Code": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Symbol": {
          "type": "string"
        },
        "Culture": {
          "type": "string"
        }
      }
    },
    "HolidayCalendar": {
      "type": "object",
      "properties": {
        "HolidayCalendarID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "ModuleResponse": {
      "type": "object",
      "properties": {
        "ModuleID": {
          "format": "int32",
          "type": "integer"
        },
        "ModuleName": {
          "type": "string"
        },
        "ProjectID": {
          "format": "int32",
          "type": "integer"
        },
        "Projectname": {
          "type": "string"
        },
        "Budget": {
          "format": "double",
          "type": "number"
        },
        "GLCodeID": {
          "format": "int32",
          "type": "integer"
        },
        "GLCodeName": {
          "type": "string"
        },
        "BuyPrice": {
          "format": "double",
          "type": "number"
        },
        "BudgetTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "BudgetTypeName": {
          "type": "string"
        },
        "BudgetFrequencyID": {
          "format": "int32",
          "type": "integer"
        },
        "BudgetFrequencyName": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "Tasks": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "ExternalReference": {
          "type": "string"
        },
        "ModifiedDateUTC": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ModuleRequest": {
      "required": [
        "ProjectID",
        "ModuleName"
      ],
      "type": "object",
      "properties": {
        "ProjectID": {
          "format": "int32",
          "type": "integer"
        },
        "ModuleName": {
          "type": "string"
        },
        "Budget": {
          "format": "double",
          "type": "number"
        },
        "GLCodeID": {
          "format": "int32",
          "type": "integer"
        },
        "BuyPrice": {
          "format": "double",
          "type": "number"
        },
        "BudgetTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "BudgetFrequencyID": {
          "format": "int32",
          "type": "integer"
        },
        "IsActive": {
          "type": "boolean"
        },
        "ExternalReference": {
          "type": "string"
        }
      }
    },
    "ModuleBudgetType": {
      "type": "object",
      "properties": {
        "BudgetTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "ModuleBudgetFrequency": {
      "type": "object",
      "properties": {
        "BudgetFrequencyID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "ModuleQuery": {
      "type": "object",
      "properties": {
        "ProjectID": {
          "format": "int32",
          "type": "integer"
        },
        "ModuleID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "ExternalReference": {
          "type": "string"
        },
        "ModifiedSinceDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "OfficeResponse": {
      "type": "object",
      "properties": {
        "OfficeID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "FullName": {
          "type": "string"
        },
        "PhoneNumber": {
          "type": "string"
        },
        "Website": {
          "type": "string"
        },
        "DefaultHolidayCalendarID": {
          "format": "int32",
          "type": "integer"
        },
        "TimeZone": {
          "type": "string"
        },
        "DefaultTaxTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "CurrencyID": {
          "format": "int32",
          "type": "integer"
        },
        "CurrencyCode": {
          "type": "string"
        },
        "CountryID": {
          "format": "int32",
          "type": "integer"
        },
        "CountryName": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "ExternalReference": {
          "type": "string"
        },
        "ModifiedDateUTC": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "OfficeQuery": {
      "type": "object",
      "properties": {
        "OfficeID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "ExternalReference": {
          "type": "string"
        },
        "ModifiedSinceDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Position": {
      "type": "object",
      "properties": {
        "PositionID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "IsShadowable": {
          "type": "boolean"
        },
        "IsActive": {
          "type": "boolean"
        },
        "SortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedDateUTC": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ProjectType": {
      "type": "object",
      "properties": {
        "ProjectTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "ProjectStatus": {
      "type": "object",
      "properties": {
        "ProjectStatusID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "ProjectResponse": {
      "type": "object",
      "properties": {
        "ProjectID": {
          "format": "int32",
          "type": "integer"
        },
        "ProjectName": {
          "type": "string"
        },
        "OfficeID": {
          "format": "int32",
          "type": "integer"
        },
        "OfficeName": {
          "type": "string"
        },
        "ClientID": {
          "format": "int32",
          "type": "integer"
        },
        "ClientName": {
          "type": "string"
        },
        "ProjectTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "ProjectTypeName": {
          "type": "string"
        },
        "ProjectStatusID": {
          "format": "int32",
          "type": "integer"
        },
        "ProjectStatusName": {
          "type": "string"
        },
        "CurrencyID": {
          "format": "int32",
          "type": "integer"
        },
        "CurrencyCode": {
          "type": "string"
        },
        "ProjectManagerID": {
          "format": "int32",
          "type": "integer"
        },
        "ProjectManagerName": {
          "type": "string"
        },
        "AccountManagerID": {
          "format": "int32",
          "type": "integer"
        },
        "AccountManagerName": {
          "type": "string"
        },
        "TaskSelfServiceModeID": {
          "format": "int32",
          "type": "integer"
        },
        "TaskSelfServiceModeName": {
          "type": "string"
        },
        "HolidayCalendarID": {
          "format": "int32",
          "type": "integer"
        },
        "HolidayCalendarName": {
          "type": "string"
        },
        "DefaultRateCardID": {
          "format": "int32",
          "type": "integer"
        },
        "DefaultInvoicesToForecastAmount": {
          "type": "boolean"
        },
        "SendInvoicesToFinanceEmail": {
          "type": "boolean"
        },
        "SendInvoicesToBillingContactEmail": {
          "type": "boolean"
        },
        "IsActive": {
          "type": "boolean"
        },
        "Modules": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "ExternalReference": {
          "type": "string"
        },
        "ModifiedDateUTC": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ProjectRequest": {
      "required": [
        "ProjectName",
        "OfficeID",
        "ClientID",
        "ProjectTypeID",
        "ProjectStatusID",
        "CurrencyID",
        "ProjectManagerID",
        "AccountManagerID",
        "TaskSelfServiceModeID"
      ],
      "type": "object",
      "properties": {
        "ProjectName": {
          "type": "string"
        },
        "OfficeID": {
          "format": "int32",
          "type": "integer"
        },
        "ClientID": {
          "format": "int32",
          "type": "integer"
        },
        "ProjectTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "ProjectStatusID": {
          "format": "int32",
          "type": "integer"
        },
        "CurrencyID": {
          "format": "int32",
          "type": "integer"
        },
        "ProjectManagerID": {
          "format": "int32",
          "type": "integer"
        },
        "AccountManagerID": {
          "format": "int32",
          "type": "integer"
        },
        "TaskSelfServiceModeID": {
          "format": "int32",
          "type": "integer"
        },
        "HolidayCalendarID": {
          "format": "int32",
          "type": "integer"
        },
        "DefaultRateCardID": {
          "format": "int32",
          "type": "integer"
        },
        "DefaultInvoicesToForecastAmount": {
          "type": "boolean"
        },
        "SendInvoicesToFinanceEmail": {
          "type": "boolean"
        },
        "SendInvoicesToBillingContactEmail": {
          "type": "boolean"
        },
        "IsActive": {
          "type": "boolean"
        },
        "ExternalReference": {
          "type": "string"
        }
      }
    },
    "ProjectTaskSelfServiceMode": {
      "type": "object",
      "properties": {
        "TaskSelfServiceModeID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "ProjectQuery": {
      "type": "object",
      "properties": {
        "ClientID": {
          "format": "int32",
          "type": "integer"
        },
        "ProjectID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "ExternalReference": {
          "type": "string"
        },
        "ModifiedSinceDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Rank": {
      "type": "object",
      "properties": {
        "RankID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "SortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedDateUTC": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ServiceDeskUserResponse": {
      "description": "A response object for querying a user",
      "type": "object",
      "properties": {
        "UserID": {
          "format": "int32",
          "description": "User ID of the person queried",
          "type": "integer"
        },
        "Email": {
          "description": "Email of the person queried",
          "type": "string"
        }
      }
    },
    "ServiceDeskTaskRequest": {
      "description": "A request object for creating or updating a Task",
      "type": "object",
      "properties": {
        "Fields": {
          "description": "A list of Custom Fields\r\nThis must contain a Module, Task and User Custom Field\r\nEach Field should have the IsKey property set to true",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Field"
          }
        },
        "TaskName": {
          "description": "Task name (always required)",
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "description": "Task start date (only required when creating a task)",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "Task end date (only required when closing a task)",
          "type": "string"
        },
        "AssignedUserEmail": {
          "description": "Email of person assigned to the Task (always required)",
          "type": "string"
        }
      }
    },
    "Field": {
      "description": "An object that contains data that maps to a Custom Field",
      "type": "object",
      "properties": {
        "TypeID": {
          "description": "Custom Field type",
          "enum": [
            "User",
            "Module",
            "Task"
          ],
          "type": "string"
        },
        "Name": {
          "description": "Custom Field name",
          "type": "string"
        },
        "Value": {
          "description": "Custom Field value",
          "type": "string"
        },
        "IsKey": {
          "description": "Indicates that this Custom Field is required",
          "type": "boolean"
        }
      }
    },
    "ServiceDeskTaskResponse": {
      "description": "A response object from creating or updating a Task",
      "type": "object",
      "properties": {
        "ProjectID": {
          "format": "int32",
          "description": "Project ID of the create/udpated Task",
          "type": "integer"
        },
        "ModuleID": {
          "format": "int32",
          "description": "Module ID of the create/udpated Task",
          "type": "integer"
        },
        "TaskID": {
          "format": "int32",
          "description": "Task ID of the create/udpated Task",
          "type": "integer"
        },
        "TaskName": {
          "type": "string"
        },
        "TaskStatus": {
          "type": "string"
        },
        "IsTaskCreated": {
          "description": "Indicates if the Task has been created",
          "type": "boolean"
        },
        "IsTaskUpdated": {
          "description": "Indicates if the task has been updated",
          "type": "boolean"
        },
        "IsUserTaskCreated": {
          "description": "Indicates if the assigned person has been added to the Task",
          "type": "boolean"
        },
        "UserTaskExists": {
          "description": "Indicates if the UserTask exists",
          "type": "boolean"
        },
        "UserExists": {
          "description": "Indicates if the User exists",
          "type": "boolean"
        },
        "UserEmail": {
          "description": "Email of the User",
          "type": "string"
        }
      }
    },
    "TaskType": {
      "type": "object",
      "properties": {
        "TaskTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "TaskStatus": {
      "type": "object",
      "properties": {
        "TaskStatusID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "TaskResponse": {
      "type": "object",
      "properties": {
        "TaskID": {
          "format": "int32",
          "type": "integer"
        },
        "TaskName": {
          "type": "string"
        },
        "ModuleID": {
          "format": "int32",
          "type": "integer"
        },
        "ModuleName": {
          "type": "string"
        },
        "TaskTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "TaskTypeName": {
          "type": "string"
        },
        "TaskStatusID": {
          "format": "int32",
          "type": "integer"
        },
        "TaskStatusName": {
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "PercentComplete": {
          "format": "int32",
          "type": "integer"
        },
        "IsOnTimesheet": {
          "type": "boolean"
        },
        "EnforceTimesheetDates": {
          "type": "boolean"
        },
        "IsCommentRequired": {
          "type": "boolean"
        },
        "IsScheduledTask": {
          "type": "boolean"
        },
        "IsAutoSchedule": {
          "type": "boolean"
        },
        "Users": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "ExternalReference": {
          "type": "string"
        },
        "ModifiedDateUTC": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "TaskRequest": {
      "required": [
        "ModuleID",
        "TaskName"
      ],
      "type": "object",
      "properties": {
        "ModuleID": {
          "format": "int32",
          "type": "integer"
        },
        "TaskName": {
          "type": "string"
        },
        "TaskTypeID": {
          "format": "int32",
          "type": "integer"
        },
        "TaskStatusID": {
          "format": "int32",
          "type": "integer"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "PercentComplete": {
          "format": "int32",
          "type": "integer"
        },
        "IsOnTimesheet": {
          "type": "boolean"
        },
        "EnforceTimesheetDates": {
          "type": "boolean"
        },
        "IsCommentRequired": {
          "type": "boolean"
        },
        "IsScheduledTask": {
          "type": "boolean"
        },
        "IsAutoSchedule": {
          "type": "boolean"
        },
        "ExternalReference": {
          "type": "string"
        }
      }
    },
    "TaskQuery": {
      "type": "object",
      "properties": {
        "ModuleID": {
          "format": "int32",
          "type": "integer"
        },
        "TaskID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "ExternalReference": {
          "type": "string"
        },
        "ModifiedSinceDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "Team": {
      "type": "object",
      "properties": {
        "TeamID": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        }
      }
    },
    "TimesheetQuery": {
      "type": "object",
      "properties": {
        "UserID": {
          "format": "int32",
          "type": "integer"
        },
        "TaskID": {
          "format": "int32",
          "type": "integer"
        },
        "Date": {
          "format": "date-time",
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "UserExternalReference": {
          "type": "string"
        },
        "TaskExternalReference": {
          "type": "string"
        },
        "ModifiedSinceDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "TimeEntryResponse": {
      "type": "object",
      "properties": {
        "UserID": {
          "format": "int32",
          "type": "integer"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "TaskID": {
          "format": "int32",
          "type": "integer"
        },
        "TaskName": {
          "type": "string"
        },
        "Date": {
          "format": "date-time",
          "type": "string"
        },
        "Minutes": {
          "format": "int32",
          "type": "integer"
        },
        "Comment": {
          "type": "string"
        },
        "ModifiedDateUTC": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "TimeEntryRequest": {
      "required": [
        "UserID",
        "TaskID",
        "Date",
        "Minutes"
      ],
      "type": "object",
      "properties": {
        "UserID": {
          "format": "int32",
          "type": "integer"
        },
        "TaskID": {
          "format": "int32",
          "type": "integer"
        },
        "Date": {
          "format": "date-time",
          "type": "string"
        },
        "Minutes": {
          "format": "int32",
          "type": "integer"
        },
        "Comment": {
          "type": "string"
        }
      }
    },
    "UserRoleResponse": {
      "type": "object",
      "properties": {
        "UserRoleID": {
          "format": "int32",
          "type": "integer"
        },
        "Code": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "UserID": {
          "format": "int32",
          "type": "integer"
        },
        "Email": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "BirthDate": {
          "format": "date-time",
          "type": "string"
        },
        "Gender": {
          "type": "string"
        },
        "JobTitle": {
          "type": "string"
        },
        "EmployeeStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EmployeeEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "ExternalReference": {
          "type": "string"
        },
        "ModifiedDateUTC": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "UserRequest": {
      "required": [
        "Email",
        "FirstName",
        "LastName"
      ],
      "type": "object",
      "properties": {
        "Email": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "BirthDate": {
          "format": "date-time",
          "type": "string"
        },
        "Gender": {
          "type": "string"
        },
        "JobTitle": {
          "type": "string"
        },
        "EmployeeStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EmployeeEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "ExternalReference": {
          "type": "string"
        }
      }
    },
    "UserRoleRequest": {
      "required": [
        "UserRoleIDs"
      ],
      "type": "object",
      "properties": {
        "UserRoleIDs": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "UserPostingResponse": {
      "type": "object",
      "properties": {
        "UserID": {
          "format": "int32",
          "type": "integer"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "IsBillable": {
          "type": "boolean"
        },
        "Recoverable": {
          "format": "int32",
          "type": "integer"
        },
        "Rate": {
          "format": "double",
          "type": "number"
        },
        "Cost": {
          "format": "double",
          "type": "number"
        },
        "OfficeID": {
          "format": "int32",
          "type": "integer"
        },
        "TeamID": {
          "format": "int32",
          "type": "integer"
        },
        "PositionID": {
          "format": "int32",
          "type": "integer"
        },
        "RankID": {
          "format": "int32",
          "type": "integer"
        },
        "AgreementID": {
          "format": "int32",
          "type": "integer"
        },
        "HolidayCalendarID": {
          "format": "int32",
          "type": "integer"
        },
        "WorkWeekID": {
          "format": "int32",
          "type": "integer"
        },
        "ManagerID": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "UserPostingRequest": {
      "required": [
        "StartDate",
        "IsBillable",
        "Recoverable",
        "Rate",
        "OfficeID",
        "TeamID",
        "WorkWeekID"
      ],
      "type": "object",
      "properties": {
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "IsBillable": {
          "type": "boolean"
        },
        "Recoverable": {
          "format": "int32",
          "type": "integer"
        },
        "Rate": {
          "format": "double",
          "type": "number"
        },
        "Cost": {
          "format": "double",
          "type": "number"
        },
        "OfficeID": {
          "format": "int32",
          "type": "integer"
        },
        "TeamID": {
          "format": "int32",
          "type": "integer"
        },
        "PositionID": {
          "format": "int32",
          "type": "integer"
        },
        "RankID": {
          "format": "int32",
          "type": "integer"
        },
        "AgreementID": {
          "format": "int32",
          "type": "integer"
        },
        "HolidayCalendarID": {
          "format": "int32",
          "type": "integer"
        },
        "WorkWeekID": {
          "format": "int32",
          "type": "integer"
        },
        "ManagerID": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "UserQuery": {
      "type": "object",
      "properties": {
        "UserID": {
          "format": "int32",
          "type": "integer"
        },
        "Email": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "ExternalReference": {
          "type": "string"
        },
        "ModifiedSinceDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "basic": {
      "type": "basic",
      "description": "Basic HTTP Authentication"
    }
  }
}